name: Deploy Docker Container

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Copy config file
      run: cp ressources/config.json /tmp/config.json
    - name: Update config file
      run: |
        jq --arg clientId "$DISCORD_CLIENT_ID" '.clientId=$clientId' /tmp/config.json > ressources/config.json
        jq --arg guildId "$DISCORD_GUILD_ID" '.guildId=$guildId' /tmp/config.json > ressources/config.json
        jq --arg token "$DISCORD_TOKEN" '.token=$token' /tmp/config.json > ressources/config.json
    - name: Build Docker Image
      run: |
        docker build -t linkstart-bot-image .
        docker tag linkstart-bot-image garwalle/firstimage:latest
    - name: Push Docker Image
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push linkstart-bot-image
    - name: Deploy to Production
      run: |
        ssh -o StrictHostKeyChecking=no martin@martin-jeanne.site "docker pull linkstart-bot-image && docker stop linkstart-bot && docker rm linkstart-bot && docker run -d --name linkstart-bot linkstart-bot-image"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Clean up
      run: rm /tmp/config.json